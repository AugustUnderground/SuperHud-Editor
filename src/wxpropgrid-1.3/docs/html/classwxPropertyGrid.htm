<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>wxPropertyGrid: wxPropertyGrid class Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.3.6 -->
<div class="qindex">  <form class="search" action="search.php" method="get">
<a class="qindex" href="index.htm">Main&nbsp;Page</a> | <a class="qindex" href="modules.htm">Modules</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Class&nbsp;List</a> | <a class="qindex" href="functions.htm">Class&nbsp;Members</a>  | <span class="search"><u>S</u>earch&nbsp;for&nbsp;<input class="search" type="text" name="query" value="" size="20" accesskey="s"/></span></form></div>
<h1>wxPropertyGrid Class Reference</h1>wxPropertyGrid is a specialized two-column grid for editing properties such as strings, numbers, flagsets, fonts, and colours. wxPropertySheet used to do the very same thing, but it hasn't been updated for a while and it is currently deprecated.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;propgrid.h&gt;</code>
<p>
<p>Inheritance diagram for wxPropertyGrid:
<p><center><img src="classwxPropertyGrid.png" usemap="#wxPropertyGrid_map" border="0" alt=""></center>
<map name="wxPropertyGrid_map">
<area href="classwxPropertyContainerMethods.htm" alt="wxPropertyContainerMethods" shape="rect" coords="0,0,179,24">
</map>
<a href="classwxPropertyGrid-members.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>[NOHEADER]</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_0">AdjustPosForClipperWindow</a> (wxWindow *topCtrlWnd, int *x, int *y)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_1">EditorsValueWasModified</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_2">EditorsValueWasNotModified</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_3">FixPosForTextCtrl</a> (wxWindow *ctrl, const wxPoint &amp;offset=wxPoint(0, 0))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxWindow *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_4">GenerateEditorButton</a> (const wxPoint &amp;pos, const wxSize &amp;sz)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxWindow *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_5">GenerateEditorTextCtrl</a> (const wxPoint &amp;pos, const wxSize &amp;sz, const wxString &amp;value, wxWindow *secondary, int extraStyle=0, int maxLen=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridz0_6" doxytag="wxPropertyGrid::GenerateEditorTextCtrlAndButton" ></a>
wxWindow *&nbsp;</td><td class="memItemRight" valign=bottom><b>GenerateEditorTextCtrlAndButton</b> (const wxPoint &amp;pos, const wxSize &amp;sz, wxWindow **psecondary, int limited_editing, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxWindow *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_7">GetEditorControl</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxWindow *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_8">GetEditorControlSecondary</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxPoint&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_9">GetGoodEditorDialogPosition</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, const wxSize &amp;sz)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridz0_10" doxytag="wxPropertyGrid::GetPrimaryEditor" ></a>
wxWindow *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPrimaryEditor</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxRect&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_11">GetPropertyRect</a> (const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p1, const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p2) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridz0_12" doxytag="wxPropertyGrid::IgnoredEventPasses" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>IgnoredEventPasses</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridz0_13" doxytag="wxPropertyGrid::IgnoreNextEvent" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>IgnoreNextEvent</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_14">IsEditorsValueModified</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridz0_15" doxytag="wxPropertyGrid::IsNextEventIgnored" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>IsNextEventIgnored</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_16">OnCustomEditorEvent</a> (wxCommandEvent &amp;event)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_17">ArrayStringToString</a> (wxString &amp;dst, const wxArrayString &amp;src, wxChar preDelim, wxChar postDelim, int flags)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridz0_18" doxytag="wxPropertyGrid::CreateEscapeSequences" ></a>
wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>CreateEscapeSequences</b> (wxString &amp;dst_str, wxString &amp;src_str)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridz0_19" doxytag="wxPropertyGrid::ExpandEscapeSequences" ></a>
wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>ExpandEscapeSequences</b> (wxString &amp;dst_str, wxString &amp;src_str)</td></tr>

<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea0">AddPropertyChoice</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;label, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea1">Append</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea2" doxytag="wxPropertyGrid::AppendIn" ></a>
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>AppendIn</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea4">BeginAddChildren</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida4">CanClose</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida5">CenterSplitter</a> (bool enable_auto_centering=false)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida6">Clear</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida7" doxytag="wxPropertyGrid::ClearInternalFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>ClearInternalFlag</b> (long flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida8">ClearModifiedStatus</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida9">ClearModifiedStatus</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea8">ClearPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida11">ClearSelection</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea11">Collapse</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea12">CollapseAll</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida14">CommitChangesFromEditor</a> (wxUint32 flags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida15">Create</a> (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=(0), const wxChar *name=wxPropertyGridNameStr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida16" doxytag="wxPropertyGrid::DecFrozen" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>DecFrozen</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea13">DeleteProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea14">DeletePropertyChoice</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int index)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea15">DisableProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida20" doxytag="wxPropertyGrid::DoPropertyChanged" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>DoPropertyChanged</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, wxVariant *pPendingValue, unsigned int selFlags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida21">EditorValidate</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida22">EnableCategories</a> (bool enable)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida23">EnableCommonValues</a> (bool enable=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea34">EnableProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool enable=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea35">EndAddChildren</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida26">EnsureVisible</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea36">Expand</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea37">ExpandAll</a> (bool expand=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida29">GetCaptionBackgroundColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida30" doxytag="wxPropertyGrid::GetCaptionFont" ></a>
wxFont &amp;&nbsp;</td><td class="memItemRight" valign=bottom><b>GetCaptionFont</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida31">GetCaptionForegroundColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida32">GetCellBackgroundColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida33">GetCellDisabledTextColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida34">GetCellTextColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida35">GetChildrenCount</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>size_t&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida36">GetChildrenCount</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida37" doxytag="wxPropertyGrid::GetColumnCount" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetColumnCount</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida38" doxytag="wxPropertyGrid::GetCommonValue" ></a>
const <a class="el" href="classwxPGCommonValue.htm">wxPGCommonValue</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetCommonValue</b> (unsigned int i) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida39">GetCommonValueLabel</a> (unsigned int i) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida40">GetDisplayedCommonValueCount</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxArrayPGProperty&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea40">GetExpandedProperties</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea41" doxytag="wxPropertyGrid::GetFirst" ></a>
const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetFirst</b> (int flags=(((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|0x2000)|(0x0004|(0x0020&lt;&lt; 16)))) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea42">GetFirst</a> (int flags=(((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|0x2000)|(0x0004|(0x0020&lt;&lt; 16))))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida44">GetFirstCategory</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea43">GetFirstChild</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida46">GetFirstProperty</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida47" doxytag="wxPropertyGrid::GetFirstVisible" ></a>
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetFirstVisible</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida48">GetFirstVisible</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida49">GetFontHeight</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida50">GetGrid</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida51" doxytag="wxPropertyGrid::GetImageRect" ></a>
wxRect&nbsp;</td><td class="memItemRight" valign=bottom><b>GetImageRect</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p, int item) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxSize&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida52">GetImageSize</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p=NULL, int item=-1) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida53" doxytag="wxPropertyGrid::GetInternalFlags" ></a>
long&nbsp;</td><td class="memItemRight" valign=bottom><b>GetInternalFlags</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida54">GetItemAtY</a> (int y) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea45" doxytag="wxPropertyGrid::GetIterator" ></a>
<a class="el" href="classwxPropertyGridConstIterator.htm">wxPropertyGridConstIterator</a>&nbsp;</td><td class="memItemRight" valign=bottom><b>GetIterator</b> (int flags, int startPos) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea46">GetIterator</a> (int flags, int startPos)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea47" doxytag="wxPropertyGrid::GetIterator" ></a>
<a class="el" href="classwxPropertyGridConstIterator.htm">wxPropertyGridConstIterator</a>&nbsp;</td><td class="memItemRight" valign=bottom><b>GetIterator</b> (int flags=((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|(0x0004|(0x0020&lt;&lt; 16))), <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *firstProp=NULL) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">GetIterator</a> (int flags=((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|(0x0004|(0x0020&lt;&lt; 16))), <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *firstProp=NULL)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida59">GetLastChild</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida60" doxytag="wxPropertyGrid::GetLastItem" ></a>
const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetLastItem</b> (int flags=((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|(0x0004|(0x0020&lt;&lt; 16)))) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida61">GetLastItem</a> (int flags=((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|(0x0004|(0x0020&lt;&lt; 16))))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida62">GetLastProperty</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida63">GetLastVisible</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida64">GetLineColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida65">GetMarginColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida66">GetNextCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida67">GetNextProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea55">GetNextSibling</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida69">GetNextVisible</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxWindow *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida70">GetPanel</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida71">GetPrevProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida72">GetPrevSibling</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida73">GetPrevVisible</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea58">GetPropertiesWithFlag</a> (wxArrayPGProperty *targetArr, wxPGProperty::FlagType flags, bool inverse=false, int iterFlags=((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|(0x0004|(0x0020&lt;&lt; 16))|(0x2000|(0x2000&lt;&lt; 16)|0x0020))) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea59">GetPropertyAttribute</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;attrName) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea60">GetPropertyAttributes</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida77">GetPropertyBackgroundColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida78">GetPropertyByLabel</a> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea62">GetPropertyByName</a> (const wxString &amp;name, const wxString &amp;subname) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea63">GetPropertyByName</a> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea64" doxytag="wxPropertyGrid::GetPropertyByNameA" ></a>
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyByNameA</b> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPropertyCategory.htm">wxPropertyCategory</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea66">GetPropertyCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea67">GetPropertyChoices</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxChar *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea68">GetPropertyClassName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea69">GetPropertyClientData</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida86">GetPropertyColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea70">GetPropertyEditor</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea71">GetPropertyHelpString</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxBitmap *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea72">GetPropertyImage</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>unsigned int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea73">GetPropertyIndex</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea74">GetPropertyLabel</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>const wxString &amp;&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea75">GetPropertyName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea76">GetPropertyParent</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea77">GetPropertyPtr</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxString&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea78">GetPropertyShortClassName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida96">GetPropertyTextColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxValidator *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea79">GetPropertyValidator</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea80">GetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea81" doxytag="wxPropertyGrid::GetPropertyValueAsArrayInt" ></a>
wxArrayInt&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsArrayInt</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea82" doxytag="wxPropertyGrid::GetPropertyValueAsArrayString" ></a>
wxArrayString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsArrayString</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea83" doxytag="wxPropertyGrid::GetPropertyValueAsBool" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsBool</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea84" doxytag="wxPropertyGrid::GetPropertyValueAsDateTime" ></a>
wxDateTime&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsDateTime</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea85" doxytag="wxPropertyGrid::GetPropertyValueAsDouble" ></a>
double&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsDouble</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea86" doxytag="wxPropertyGrid::GetPropertyValueAsInt" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsInt</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea87" doxytag="wxPropertyGrid::GetPropertyValueAsLong" ></a>
long&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsLong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea88" doxytag="wxPropertyGrid::GetPropertyValueAsLongLong" ></a>
wxLongLong_t&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsLongLong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea89" doxytag="wxPropertyGrid::GetPropertyValueAsPoint" ></a>
wxPoint&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsPoint</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea90" doxytag="wxPropertyGrid::GetPropertyValueAsSize" ></a>
wxSize&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsSize</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea91" doxytag="wxPropertyGrid::GetPropertyValueAsString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsString</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea92" doxytag="wxPropertyGrid::GetPropertyValueAsULong" ></a>
unsigned long&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsULong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea93" doxytag="wxPropertyGrid::GetPropertyValueAsULongLong" ></a>
wxULongLong_t&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsULongLong</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea94" doxytag="wxPropertyGrid::GetPropertyValueAsVoidPtr" ></a>
void *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsVoidPtr</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea95" doxytag="wxPropertyGrid::GetPropertyValueAsWxObjectPtr" ></a>
wxObject *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueAsWxObjectPtr</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxVariant&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea96">GetPropertyValues</a> (const wxString &amp;listname=wxEmptyString, <a class="el" href="classwxPGProperty.htm">wxPGId</a> baseparent=((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *) NULL), long flags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea97" doxytag="wxPropertyGrid::GetPropertyValueType" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>GetPropertyValueType</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida116">GetRoot</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida117">GetRowHeight</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida118" doxytag="wxPropertyGrid::GetSelectedProperty" ></a>
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetSelectedProperty</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida119">GetSelection</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida120">GetSelectionBackgroundColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>wxColour&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida121">GetSelectionForegroundColour</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida122" doxytag="wxPropertyGrid::GetSpacingY" ></a>
int&nbsp;</td><td class="memItemRight" valign=bottom><b>GetSpacingY</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida123">GetSplitterPosition</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea102" doxytag="wxPropertyGrid::GetState" ></a>
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetState</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida125">GetUnspecifiedCommonValue</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida126">GetVerticalSpacing</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="classwxPGVIterator.htm">wxPGVIterator</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea105">GetVIterator</a> (int flags) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida128">HasSelection</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida129" doxytag="wxPropertyGrid::HasVirtualWidth" ></a>
bool&nbsp;</td><td class="memItemRight" valign=bottom><b>HasVirtualWidth</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea107">HideProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool hide=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="structwxPropertyGridHitTestResult.htm">wxPropertyGridHitTestResult</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida131">HitTest</a> (const wxPoint &amp;pt) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida132" doxytag="wxPropertyGrid::IncFrozen" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>IncFrozen</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea111">Insert</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> parent, int index, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea112">Insert</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> priorThis, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *newproperty)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea113" doxytag="wxPropertyGrid::InsertCategory" ></a>
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>InsertCategory</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int index, const wxString &amp;label, const wxString &amp;name=(*((wxString *) NULL)))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea114">InsertPropertyChoice</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;label, int index, int value=INT_MAX)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida137">IsAnyModified</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida138">IsFrozen</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida139">IsMainButtonEvent</a> (const wxEvent &amp;event)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea118">IsPropertyCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea119">IsPropertyEnabled</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea120">IsPropertyExpanded</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea121">IsPropertyKindOf</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxClassInfo *info) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea122">IsPropertyModified</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea123">IsPropertyShown</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea124">IsPropertyUnspecified</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea125">LimitPropertyEditing</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool limit=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea126">NamesToProperties</a> (wxArrayPGProperty *properties, const wxArrayString &amp;names) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida149" doxytag="wxPropertyGrid::OnComboItemPaint" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>OnComboItemPaint</b> (wxPGCustomComboControl *pCb, int item, wxDC &amp;dc, wxRect &amp;rect, int flags)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea129">PropertiesToNames</a> (wxArrayString *names, const wxArrayPGProperty &amp;properties) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea130">RefreshGrid</a> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *state=NULL)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea131">ReplaceProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *property)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida153">ResetColours</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida154">SelectProperty</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool focus=false)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida155" doxytag="wxPropertyGrid::SendNavigationKeyEvent" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SendNavigationKeyEvent</b> (int dir)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida156">SetButtonShortcut</a> (int keycode, bool ctrlDown=false, bool altDown=false)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida157">SetCaptionBackgroundColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida158">SetCaptionForegroundColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida159">SetCaptionTextColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida160">SetCellBackgroundColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida161">SetCellDisabledTextColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida162">SetCellTextColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida163">SetColumnCount</a> (int colCount)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida164">SetCurrentCategory</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea133">SetExpandedProperties</a> (wxArrayPGProperty &amp;array, bool expand=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGrida166" doxytag="wxPropertyGrid::SetInternalFlag" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetInternalFlag</b> (long flag)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida167">SetLineColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida168">SetMarginColour</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea134">SetPropertiesFlag</a> (wxArrayPGProperty &amp;srcArr, wxPGProperty::FlagType flags, bool inverse=false)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea135">SetPropertyAttribute</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;attrName, wxVariant value, long argFlags=0)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida171">SetPropertyAttributeAll</a> (const wxString &amp;attrName, wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea136">SetPropertyAttributes</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;attributes)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida173">SetPropertyBackgroundColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea137">SetPropertyCell</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int column, const wxString &amp;text=wxEmptyString, const wxBitmap &amp;bitmap=wxNullBitmap, const wxColour &amp;fgCol=wxNullColour, const wxColour &amp;bgCol=wxNullColour)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea138">SetPropertyChoices</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea139">SetPropertyChoicesExclusive</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea140">SetPropertyClientData</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, void *clientData)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida178">SetPropertyColourToDefault</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea141">SetPropertyEditor</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;editorName)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea142">SetPropertyEditor</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea143">SetPropertyHelpString</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;helpString)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea144">SetPropertyImage</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxBitmap &amp;bmp)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea145">SetPropertyLabel</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;newproplabel)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>bool&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea146">SetPropertyMaxLength</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int maxLen)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida185">SetPropertyName</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;newname)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea147">SetPropertyReadOnly</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool set=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida187">SetPropertyTextColour</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea148">SetPropertyUnspecified</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea149">SetPropertyValidator</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxValidator &amp;validator)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea150">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxArrayInt &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea151">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxULongLong_t value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea152">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxLongLong_t value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea153">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxSize &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea154">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxPoint &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea155">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxVariant value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea156" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValue</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxObject &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea157">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, void *value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea158">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxObject *value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea159">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea160" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValue</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxDateTime &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea161">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxArrayString &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea162" doxytag="wxPropertyGrid::SetPropertyValue" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValue</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxChar *value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea163">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, bool value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea164">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, double value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea165">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, int value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea166">SetPropertyValue</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, long value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea167" doxytag="wxPropertyGrid::SetPropertyValues" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>SetPropertyValues</b> (const wxVariant &amp;list, <a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> defaultCategory=((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *) NULL))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea168">SetPropertyValues</a> (const wxList &amp;list, <a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> defaultCategory=((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *) NULL))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea169">SetPropVal</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, wxVariant &amp;value)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida210">SetSelectionBackground</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida211">SetSelectionForeground</a> (const wxColour &amp;col)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida212">SetSplitterLeft</a> (bool subProps=false)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida213">SetSplitterPosition</a> (int newxpos, bool refresh=true)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida214">SetUnspecifiedCommonValue</a> (int index)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida215">SetVerticalSpacing</a> (int vspacing)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida216">SetVirtualWidth</a> (int width)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida217">SetWindowStyleFlag</a> (long style)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida218">ShowPropertyError</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;msg)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida219">Sort</a> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida220">Sort</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida221">SwitchState</a> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *pNewState)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida222">ValueChangeInEvent</a> (wxVariant variant)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea175">wxDEPRECATED</a> (bool IsModified(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea176">wxDEPRECATED</a> (bool IsPropertyValueType(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxChar *typestr) const)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea177">wxDEPRECATED</a> (bool Disable(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea178">wxDEPRECATED</a> (void Delete(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagea179" doxytag="wxPropertyGrid::wxDEPRECATED" ></a>
&nbsp;</td><td class="memItemRight" valign=bottom><b>wxDEPRECATED</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *AppendCategory(const wxString &amp;label, const wxString &amp;name=(*((wxString *) NULL))))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida228">wxDEPRECATED</a> (void SetPropertyColour(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxColour &amp;col))</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida229">wxDEPRECATED</a> (bool IsPropertySelected(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id) const)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida230">wxDEPRECATED</a> (void ClearTargetPage())</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida231">wxPropertyGrid</a> (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &amp;pos=wxDefaultPosition, const wxSize &amp;size=wxDefaultSize, long style=(0), const wxChar *name=wxPropertyGridNameStr)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida232">wxPropertyGrid</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>virtual&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida233">~wxPropertyGrid</a> ()</td></tr>

<tr><td colspan=2><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGride0">AutoGetTranslation</a> (bool enable)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagee1">CreatePropertyByClass</a> (const wxString &amp;classname, const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagee2">CreatePropertyByType</a> (const wxString &amp;valuetype, const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGride3">DoubleToString</a> (wxString &amp;target, double value, int precision, bool removeZeroes, wxString *precTemplate)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagee3" doxytag="wxPropertyGrid::GetEditorByName" ></a>
<a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>GetEditorByName</b> (const wxString &amp;editorName)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagee4">InitAllTypeHandlers</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagee5">RegisterAdditionalEditors</a> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGride7">RegisterEditorClass</a> (<a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor, const wxString &amp;name, bool noDefCheck=false)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagee6">SetBoolChoices</a> (const wxString &amp;true_choice, const wxString &amp;false_choice)</td></tr>

<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>virtual <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="classwxPropertyGrid.htm#wxPropertyGridb0">CreateState</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPageb0" doxytag="wxPropertyGrid::DoGetPropertyByName" ></a>
virtual <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>DoGetPropertyByName</b> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPageb1" doxytag="wxPropertyGrid::DoSetPropertyAttribute" ></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>DoSetPropertyAttribute</b> (<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxString &amp;name, wxVariant &amp;value, long argFlags)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridManagerb3" doxytag="wxPropertyGrid::RefreshProperty" ></a>
virtual void&nbsp;</td><td class="memItemRight" valign=bottom><b>RefreshProperty</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p)=0</td></tr>

<tr><td colspan=2><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagep0" doxytag="wxPropertyGrid::m_emptyString" ></a>
wxString&nbsp;</td><td class="memItemRight" valign=bottom><b>m_emptyString</b></td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a class="anchor" name="wxPropertyGridPagep4" doxytag="wxPropertyGrid::m_pState" ></a>
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign=bottom><b>m_pState</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
wxPropertyGrid is a specialized two-column grid for editing properties such as strings, numbers, flagsets, fonts, and colours. wxPropertySheet used to do the very same thing, but it hasn't been updated for a while and it is currently deprecated. 
<p>
wxPropertyGrid is modeled after .NET propertygrid (hence the name), and thus features are similar. However, inorder to keep the widget lightweight, it does not (and will not) have toolbar for mode and page selection, nor the help text box. wxAdvancedPropertyGrid (or something similarly named) is planned to have these features in some distant future.<p>
<h4>Derived from</h4>
<p>
<a class="el" href="classwxPropertyContainerMethods.htm">wxPropertyContainerMethods</a><br>
 wxScrolledWindow<br>
 wxPanel<br>
 wxWindow<br>
 wxEvtHandler<br>
 wxObject<br>
<p>
<h4>Include files</h4>
<p>
&lt;wx/propertygrid/propertygrid.h&gt;<p>
<h4>Window styles</h4>
<p>
<a class="el" href="group__wndflags.htm">Additional Window Styles</a><p>
<h4>Event handling</h4>
<p>
To process input from a propertygrid control, use these event handler macros to direct input to member functions that take a <a class="el" href="classwxPropertyGridEvent.htm">wxPropertyGridEvent</a> argument.<p>
<table border="1" cellspacing="3" cellpadding="3">
<tr>
<td>EVT_PG_SELECTED (id, func)</td><td>Property is selected. </td></tr>
<tr>
<td>EVT_PG_CHANGED (id, func)</td><td>Property value is modified. </td></tr>
<tr>
<td>EVT_PG_CHANGING (id, func)</td><td>Property value is about to be changed. Use <a class="el" href="classwxPropertyGridEvent.htm#wxPropertyGridEventa22">wxPropertyGridEvent::GetValue()</a> to take a peek at the pending value. </td></tr>
<tr>
<td>EVT_PG_HIGHLIGHTED (id, func)</td><td>Mouse moves over property. Event's property is NULL if hovered on area that is not a property. </td></tr>
<tr>
<td>EVT_PG_RIGHT_CLICK (id, func)</td><td>Mouse right-clicked on a property. </td></tr>
<tr>
<td>EVT_PG_DOUBLE_CLICK (id, func)</td><td>Mouse double-clicked on a property. </td></tr>
<tr>
<td>EVT_PG_ITEM_COLLAPSED (id, func)</td><td>User collapses a property or category. </td></tr>
<tr>
<td>EVT_PG_ITEM_EXPANDED (id, func)</td><td>User expands a property or category. </td></tr>
<tr>
<td>EVT_BUTTON (id, func)</td><td>Button in a property editor was clicked. Only occurs if the property doesn't handle button clicks itself. </td></tr>
<tr>
<td>EVT_TEXT (id, func)</td><td>wxTextCtrl based editor was updated (but property value was not yet modified) </td></tr>
</table>
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPropertyGridEvent.htm">wxPropertyGridEvent</a></dd></dl>
<dl compact><dt><b>Remarks:</b></dt><dd></dd></dl>
<ul>
<li>Following functions do not automatically update the screen: Append. You probably need to explicitly call Refresh() <b>if</b> you called one of these functions outside parent window constructor.</li></ul>
<p>
<ul>
<li>Use Freeze() and Thaw() respectively to disable and enable drawing. This will also delay sorting etc. miscellaneous calculations to the last possible moment.</li></ul>
<p>
<ul>
<li>Most methods have two versions - one which accepts property id (faster) and another that accepts property name (which is a bit slower since it does a hashmap lookup).</li></ul>
<p>
For code examples, see the main page. 
<p>
<hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="wxPropertyGrida232" doxytag="wxPropertyGrid::wxPropertyGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyGrid::wxPropertyGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Two step constructor. 
<p>
Call Create when this constructor is called to build up the wxPropertyGrid    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida231" doxytag="wxPropertyGrid::wxPropertyGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyGrid::wxPropertyGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxWindowID&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em> = wxID_ANY, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em> = wxDefaultPosition, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em> = wxDefaultSize, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>style</em> = (0), </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxChar *&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em> = wxPropertyGridNameStr</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The default constructor. 
<p>
The styles to be used are styles valid for the wxWindow and wxScrolledWindow. <dl compact><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida233" doxytag="wxPropertyGrid::~wxPropertyGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual wxPropertyGrid::~<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Destructor. 
<p>
    </td>
  </tr>
</table>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="wxPropertyGridPagea0" doxytag="wxPropertyGrid::AddPropertyChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::AddPropertyChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em> = INT_MAX</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds choice to a property that can accept one. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If you need to make sure that you modify only the set of choices of a single property (and not also choices of other properties with initially identical set), call wxPropertyGrid::SetPropertyChoicesPrivate.</li><li>This usually only works for wxEnumProperty and derivatives (wxFlagsProperty can get accept new items but its items may not get updated). </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_0" doxytag="wxPropertyGrid::AdjustPosForClipperWindow" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::AdjustPosForClipperWindow </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>topCtrlWnd</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int *&nbsp;</td>
          <td class="mdname" nowrap> <em>x</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int *&nbsp;</td>
          <td class="mdname" nowrap> <em>y</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adjusts given position if topCtrlWnd is child of clipper window. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea1" doxytag="wxPropertyGrid::Append" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::Append </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>property</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Appends property to the list. 
<p>
<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> assumes ownership of the object. Becomes child of most recently added category. <dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> takes the ownership of the property pointer.</li><li>If appending a category with name identical to a category already in the <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>, then newly created category is deleted, and most recently added category (under which properties are appended) is set to the one with same name. This allows easier adding of items to same categories in multiple passes.</li><li>Does not automatically redraw the control, so you may need to call Refresh when calling this function after control has been shown for the first time. </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_17" doxytag="wxPropertyGrid::ArrayStringToString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::ArrayStringToString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>dst</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>src</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxChar&nbsp;</td>
          <td class="mdname" nowrap> <em>preDelim</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxChar&nbsp;</td>
          <td class="mdname" nowrap> <em>postDelim</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Generates contents for string dst based on the convetents of wxArrayString src. 
<p>
Format will be str1&lt;postDelim&gt; str2&lt;postDelim&gt; and so on. Set flags to 1 inorder to convert backslashes to double-back- slashes and "&lt;preDelims&gt;"'s to "\&lt;preDelims&gt;".     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGride0" doxytag="wxPropertyGrid::AutoGetTranslation" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::AutoGetTranslation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>enable</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This static function enables or disables automatic use of wxGetTranslation for following strings: wxEnumProperty list labels, wxFlagsProperty sub-property labels. 
<p>
Default is false.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea4" doxytag="wxPropertyGrid::BeginAddChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::BeginAddChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Inorder to add new items into a property with fixed children (for instance, wxFlagsProperty), you need to call this method. 
<p>
After populating has been finished, you need to call EndAddChildren.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida4" doxytag="wxPropertyGrid::CanClose" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::CanClose </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if all property grid data changes have been committed. 
<p>
Usually only returns false if value in active editor has been invalidated by a wxValidator.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida5" doxytag="wxPropertyGrid::CenterSplitter" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::CenterSplitter </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>enable_auto_centering</em> = false          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Centers the splitter. 
<p>
If argument is true, automatic splitter centering is enabled (only applicapple if style wxPG_SPLITTER_AUTO_CENTER was defined).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida6" doxytag="wxPropertyGrid::Clear" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::Clear </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes all properties. 
<p>
Does not free memory allocated for arrays etc. This should *not* be called in <a class="el" href="classwxPropertyGridManager.htm">wxPropertyGridManager</a>.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida8" doxytag="wxPropertyGrid::ClearModifiedStatus" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::ClearModifiedStatus </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Resets modified status of all properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida9" doxytag="wxPropertyGrid::ClearModifiedStatus" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::ClearModifiedStatus </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Resets modified status of a property and all sub-properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea8" doxytag="wxPropertyGrid::ClearPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::ClearPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Resets value of a property to its default. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida11" doxytag="wxPropertyGrid::ClearSelection" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::ClearSelection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deselect current selection, if any. 
<p>
Returns true if success (ie. validator did not intercept). 
<p>
Reimplemented from <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea10">wxPropertyContainerMethods</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea11" doxytag="wxPropertyGrid::Collapse" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::Collapse </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collapses given category or property with children. 
<p>
Returns true if actually collapses.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea12" doxytag="wxPropertyGrid::CollapseAll" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::CollapseAll </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Collapses all items that can be collapsed. 
<p>
DEPRECATED: Removed due to rare use case. Please instead do a small loop that iterates through the property container using GetVIterator(wxPG_ITERATE_ALL). <dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Return</em>&nbsp;</td><td>false if failed (may fail if editor value cannot be validated). </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida14" doxytag="wxPropertyGrid::CommitChangesFromEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::CommitChangesFromEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxUint32&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>flags</em> = 0          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Forces updating the value of property from the editor control. 
<p>
Returns true if DoPropertyChanged was actually called.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida15" doxytag="wxPropertyGrid::Create" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::Create </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxWindowID&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em> = wxID_ANY, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em> = wxDefaultPosition, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>size</em> = wxDefaultSize, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>style</em> = (0), </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxChar *&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em> = wxPropertyGridNameStr</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Two step creation. 
<p>
Whenever the control is created without any parameters, use Create to actually create it. Don't access the control's public methods before this is called <dl compact><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagee1" doxytag="wxPropertyGrid::CreatePropertyByClass" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::CreatePropertyByClass </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>classname</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Constructs a property. 
<p>
Class used is given as the first string argument. It may be either normal property class name, such as "wxIntProperty" or a short one such as "Int".     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagee2" doxytag="wxPropertyGrid::CreatePropertyByType" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::CreatePropertyByType </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>valuetype</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Constructs a property. 
<p>
Value type name used is given as the first string argument. It may be "string", "long", etc. Any value returned by wxVariant::GetType fits there.<p>
Otherwise, this is similar as CreatePropertyByClass. <dl compact><dt><b>Remarks:</b></dt><dd><b>Cannot</b> generate property category. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridb0" doxytag="wxPropertyGrid::CreateState" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a>* wxPropertyGrid::CreateState </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [protected, virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> used by the grid is created here. 
<p>
If grid is used in <a class="el" href="classwxPropertyGridManager.htm">wxPropertyGridManager</a>, there is no point overriding this - instead, set custom <a class="el" href="classwxPropertyGridPage.htm">wxPropertyGridPage</a> classes.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea13" doxytag="wxPropertyGrid::DeleteProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::DeleteProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes a property by id. 
<p>
If category is deleted, all children are automatically deleted as well.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea14" doxytag="wxPropertyGrid::DeletePropertyChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::DeletePropertyChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes choice from a property. 
<p>
If selected item is deleted, then the value is set to unspecified.<p>
See AddPropertyChoice for more details.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea15" doxytag="wxPropertyGrid::DisableProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::DisableProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Disables property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGride3" doxytag="wxPropertyGrid::DoubleToString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::DoubleToString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>target</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>precision</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>removeZeroes</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxString *&nbsp;</td>
          <td class="mdname" nowrap> <em>precTemplate</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Standardized double-to-string conversion. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_1" doxytag="wxPropertyGrid::EditorsValueWasModified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::EditorsValueWasModified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Call when editor widget's contents is modified. 
<p>
For example, this is called when changes text in wxTextCtrl (used in wxStringProperty and wxIntProperty). <dl compact><dt><b>Remarks:</b></dt><dd>This should only be called by properties. </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#wxPropertyCategorya100"></a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_2" doxytag="wxPropertyGrid::EditorsValueWasNotModified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::EditorsValueWasNotModified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Reverse of <a class="el" href="classwxPropertyGrid.htm#wxPropertyGridz0_1">EditorsValueWasModified()</a>. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida21" doxytag="wxPropertyGrid::EditorValidate" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::EditorValidate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if all property grid data changes have been committed. 
<p>
Usually only returns false if value in active editor has been invalidated by a wxValidator.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida22" doxytag="wxPropertyGrid::EnableCategories" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::EnableCategories </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>enable</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Enables or disables (shows/hides) categories according to parameter enable. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida23" doxytag="wxPropertyGrid::EnableCommonValues" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::EnableCommonValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>enable</em> = true          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Call to enable or disable usage of common values (values that can be selected for properties instead of their normal values). 
<p>
Common values are disabled by the default.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea34" doxytag="wxPropertyGrid::EnableProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::EnableProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>enable</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Enables or disables property, depending on whether enable is true or false. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea35" doxytag="wxPropertyGrid::EndAddChildren" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::EndAddChildren </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Called after population of property with fixed children has finished. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida26" doxytag="wxPropertyGrid::EnsureVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::EnsureVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Scrolls and/or expands items to ensure that the given item is visible. 
<p>
Returns true if something was actually done.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea36" doxytag="wxPropertyGrid::Expand" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::Expand </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Expands given category or property with children. 
<p>
Returns true if actually expands.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea37" doxytag="wxPropertyGrid::ExpandAll" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::ExpandAll </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>expand</em> = true          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Expands all items that can be expanded. 
<p>
DEPRECATED: Removed due to rare use case. Please instead do a small loop that iterates through the property container using GetVIterator(wxPG_ITERATE_ALL).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_3" doxytag="wxPropertyGrid::FixPosForTextCtrl" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::FixPosForTextCtrl </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>ctrl</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>offset</em> = wxPoint(0, 0)</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Fixes position of wxTextCtrl-like control (wxSpinCtrl usually fits as one). 
<p>
Call after control has been created (but before shown).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_4" doxytag="wxPropertyGrid::GenerateEditorButton" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxWindow* wxPropertyGrid::GenerateEditorButton </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>sz</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Shortcut for creating dialog-caller button. 
<p>
Used, for example, by wxFontProperty. <dl compact><dt><b>Remarks:</b></dt><dd>This should only be called by properties. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_5" doxytag="wxPropertyGrid::GenerateEditorTextCtrl" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxWindow* wxPropertyGrid::GenerateEditorTextCtrl </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>pos</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>sz</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxWindow *&nbsp;</td>
          <td class="mdname" nowrap> <em>secondary</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>extraStyle</em> = 0, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>maxLen</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Shortcut for creating text editor widget. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>pos</em>&nbsp;</td><td>Same as pos given for CreateEditor. </td></tr>
    <tr><td valign=top><em>sz</em>&nbsp;</td><td>Same as sz given for CreateEditor. </td></tr>
    <tr><td valign=top><em>value</em>&nbsp;</td><td>Initial text for wxTextCtrl. </td></tr>
    <tr><td valign=top><em>secondary</em>&nbsp;</td><td>If right-side control, such as button, also created, then create it first and pass it as this parameter. </td></tr>
    <tr><td valign=top><em>extraStyle</em>&nbsp;</td><td>Extra style flags to pass for wxTextCtrl. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>Note that this should generally be called only by new classes derived from <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida29" doxytag="wxPropertyGrid::GetCaptionBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetCaptionBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current category caption background colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida31" doxytag="wxPropertyGrid::GetCaptionForegroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetCaptionForegroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current category caption text colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida32" doxytag="wxPropertyGrid::GetCellBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetCellBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current cell background colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida33" doxytag="wxPropertyGrid::GetCellDisabledTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetCellDisabledTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current cell text colour when disabled. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida34" doxytag="wxPropertyGrid::GetCellTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetCellTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current cell text colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida35" doxytag="wxPropertyGrid::GetChildrenCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPropertyGrid::GetChildrenCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns number of children for the property. 
<p>
NB: Cannot be in container methods class due to name hiding.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida36" doxytag="wxPropertyGrid::GetChildrenCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> size_t wxPropertyGrid::GetChildrenCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns number of children of the root property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida39" doxytag="wxPropertyGrid::GetCommonValueLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPropertyGrid::GetCommonValueLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">unsigned int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>i</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns label of given common value. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida40" doxytag="wxPropertyGrid::GetDisplayedCommonValueCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPropertyGrid::GetDisplayedCommonValueCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Return number of displayed common values. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_7" doxytag="wxPropertyGrid::GetEditorControl" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxWindow* wxPropertyGrid::GetEditorControl </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to current active primary editor control (NULL if none). 
<p>
If editor uses clipper window, pointer is returned to the actual editor, not the clipper.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_8" doxytag="wxPropertyGrid::GetEditorControlSecondary" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxWindow* wxPropertyGrid::GetEditorControlSecondary </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to current active secondary editor control (NULL if none). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea40" doxytag="wxPropertyGrid::GetExpandedProperties" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxArrayPGProperty wxPropertyContainerMethods::GetExpandedProperties </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns list of expanded properties. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea42" doxytag="wxPropertyGrid::GetFirst" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::GetFirst </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>flags</em> = ( ( ( 0x1000 | 0x4000 | 0x0400 |    0x0020 |(( 0x0400 | 0x4000 | 0x2000 )&lt;&lt;16)) | 0x2000 ) | ( 0x0004 |(  0x0020  &lt;&lt;16)) )          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of first item, whether it is a category or property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td><a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida44" doxytag="wxPropertyGrid::GetFirstCategory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetFirstCategory </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of first category (from target page). 
<p>
DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea43" doxytag="wxPropertyGrid::GetFirstChild" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyContainerMethods::GetFirstChild </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of first child of given property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>Does not return sub-properties! </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida46" doxytag="wxPropertyGrid::GetFirstProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetFirstProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of first property that is not a category. 
<p>
DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida48" doxytag="wxPropertyGrid::GetFirstVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetFirstVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of first visible item, whether it is a category or property. 
<p>
Note that visible item means category, property, or sub-property which user can see when control is scrolled properly. It does not only mean items that are actually painted on the screen. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida49" doxytag="wxPropertyGrid::GetFontHeight" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPropertyGrid::GetFontHeight </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns height of highest characters of used font. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_9" doxytag="wxPropertyGrid::GetGoodEditorDialogPosition" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPoint wxPropertyGrid::GetGoodEditorDialogPosition </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>p</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>sz</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Generates position for a widget editor dialog box. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>p</em>&nbsp;</td><td>Property for which dialog is positioned. </td></tr>
    <tr><td valign=top><em>sz</em>&nbsp;</td><td>Known or over-approximated size of the dialog. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Position</em>&nbsp;</td><td>for dialog. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida50" doxytag="wxPropertyGrid::GetGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPropertyGrid::GetGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to itself. 
<p>
Dummy function that enables same kind of code to use wxPropertyGrid and <a class="el" href="classwxPropertyGridManager.htm">wxPropertyGridManager</a>.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida52" doxytag="wxPropertyGrid::GetImageSize" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxSize wxPropertyGrid::GetImageSize </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>p</em> = NULL, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>item</em> = -1</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns size of the custom paint image in front of property. 
<p>
If no argument is given, returns preferred size.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida54" doxytag="wxPropertyGrid::GetItemAtY" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyGrid::GetItemAtY </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>y</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property (or category) at given y coordinate (relative to control's top left). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea46" doxytag="wxPropertyGrid::GetIterator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a> wxPropertyContainerMethods::GetIterator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>startPos</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns iterator class instance. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a> flags. If default wxPG_ITERATE_DEFAULT supplied, everything except fixed subproperties are iterated. <a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
    <tr><td valign=top><em>startPos</em>&nbsp;</td><td>Either wxTOP or wxBOTTOM. wxTOP will indicate that iterations start from the first property from the top, and wxBOTTOM means that the iteration will instead begin from bottommost valid item. </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxPropertyGridManager.htm#wxPropertyGridManagera36">wxPropertyGridManager</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea48" doxytag="wxPropertyGrid::GetIterator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a> wxPropertyContainerMethods::GetIterator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em> = ( ( 0x1000 | 0x4000 | 0x0400 |    0x0020 |(( 0x0400 | 0x4000 | 0x2000 )&lt;&lt;16)) | ( 0x0004 |(  0x0020  &lt;&lt;16)) ), </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>firstProp</em> = NULL</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns iterator class instance. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td><a class="el" href="classwxPropertyGridIterator.htm">wxPropertyGridIterator</a> flags. If default wxPG_ITERATE_DEFAULT supplied, everything except fixed subproperties are iterated. <a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
    <tr><td valign=top><em>firstProp</em>&nbsp;</td><td>Property to start iteration from. If NULL, then first child of root is used. </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="classwxPropertyGridManager.htm#wxPropertyGridManagera38">wxPropertyGridManager</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida59" doxytag="wxPropertyGrid::GetLastChild" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyGrid::GetLastChild </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of last child of given property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>Returns even sub-properties. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida61" doxytag="wxPropertyGrid::GetLastItem" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetLastItem </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>flags</em> = ( ( 0x1000 | 0x4000 | 0x0400 |    0x0020 |(( 0x0400 | 0x4000 | 0x2000 )&lt;&lt;16)) | ( 0x0004 |(  0x0020  &lt;&lt;16)) )          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns last item which could be iterated using given flags. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td><a class="el" href="group__iteratorflags.htm">List of iterator flags</a> </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida62" doxytag="wxPropertyGrid::GetLastProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyGrid::GetLastProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of last item. 
<p>
Ignores categories and sub-properties. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida63" doxytag="wxPropertyGrid::GetLastVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyGrid::GetLastVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of last visible item. 
<p>
Does <b>not</b> ignore categories sub-properties. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida64" doxytag="wxPropertyGrid::GetLineColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetLineColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns colour of lines between cells. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida65" doxytag="wxPropertyGrid::GetMarginColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetMarginColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns background colour of margin. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida66" doxytag="wxPropertyGrid::GetNextCategory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetNextCategory </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of next category after a given property (which does not have to be category). 
<p>
DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida67" doxytag="wxPropertyGrid::GetNextProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetNextProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of next property. 
<p>
This does <b>not</b> iterate to sub-properties or categories, unlike GetNextVisible. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea55" doxytag="wxPropertyGrid::GetNextSibling" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyContainerMethods::GetNextSibling </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns next item under the same parent. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida69" doxytag="wxPropertyGrid::GetNextVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetNextVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of next visible item. 
<p>
Note that visible item means category, property, or sub-property which user can see when control is scrolled properly. It does not only mean items that are actually painted on the screen. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida70" doxytag="wxPropertyGrid::GetPanel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxWindow* wxPropertyGrid::GetPanel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns wxWindow that the properties are painted on, and which should be used as the parent for editor controls. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida71" doxytag="wxPropertyGrid::GetPrevProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetPrevProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of previous property. 
<p>
Unlike GetPrevVisible, this skips categories and sub-properties. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida72" doxytag="wxPropertyGrid::GetPrevSibling" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetPrevSibling </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of previous item under the same parent. 
<p>
DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida73" doxytag="wxPropertyGrid::GetPrevVisible" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetPrevVisible </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of previous visible property. 
<p>
DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea48">wxPropertyContainerMethods::GetIterator()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea58" doxytag="wxPropertyGrid::GetPropertiesWithFlag" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::GetPropertiesWithFlag </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxArrayPGProperty *&nbsp;</td>
          <td class="mdname" nowrap> <em>targetArr</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxPGProperty::FlagType&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>inverse</em> = false, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>iterFlags</em> = ((0x1000|0x4000|0x0400|0x0020|((0x0400|0x4000|0x2000)&lt;&lt; 16))|(0x0004|(0x0020&lt;&lt; 16))|(0x2000|(0x2000&lt;&lt; 16)|0x0020))</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Adds to 'targetArr' pointers to properties that have given flags 'flags' set. 
<p>
However, if 'inverse' is set to true, then only properties without given flags are stored. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td>Property flags to use. </td></tr>
    <tr><td valign=top><em>iterflags</em>&nbsp;</td><td>Iterator flags to use. Default is everything expect private children. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea59" doxytag="wxPropertyGrid::GetPropertyAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPropertyContainerMethods::GetPropertyAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>attrName</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns value of given attribute. 
<p>
If none found, returns NULL-variant.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea60" doxytag="wxPropertyGrid::GetPropertyAttributes" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a>&amp; wxPropertyContainerMethods::GetPropertyAttributes </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns map-like storage of property's attributes. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>Note that if extra style wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES is set, then builtin-attributes are not included in the storage. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida77" doxytag="wxPropertyGrid::GetPropertyBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetPropertyBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns cell background colour of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida78" doxytag="wxPropertyGrid::GetPropertyByLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyGrid::GetPropertyByLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of property with given label (case-sensitive). 
<p>
If there is no property with such label, returned property id is invalid ( i.e. it will return false with IsOk method). If there are multiple properties with identical name, most recent added is returned.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea62" doxytag="wxPropertyGrid::GetPropertyByName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::GetPropertyByName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>subname</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of a sub-property 'subname' of property 'name'. 
<p>
Same as calling GetPropertyByNameI(wxT("name.subname")), albeit slightly faster.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea63" doxytag="wxPropertyGrid::GetPropertyByName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::GetPropertyByName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>name</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns id of property with given name (case-sensitive). 
<p>
If there is no property with such name, returned property id is invalid ( i.e. it will return false with IsOk method). <dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Sub-properties (i.e. properties which have parent that is not category or root) can not be accessed globally by their name. Instead, use "&lt;property&gt;.&lt;subproperty&gt;" in place of "&lt;subproperty&gt;". </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea66" doxytag="wxPropertyGrid::GetPropertyCategory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPropertyCategory.htm">wxPropertyCategory</a>* wxPropertyContainerMethods::GetPropertyCategory </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer of property's nearest parent category. 
<p>
If no category found, returns NULL.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea67" doxytag="wxPropertyGrid::GetPropertyChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGChoices.htm">wxPGChoices</a>&amp; wxPropertyContainerMethods::GetPropertyChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns writable reference to property's list of choices (and relevant values). 
<p>
If property does not have any choices, will return reference to an invalid set of choices that will return false on IsOk call.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea68" doxytag="wxPropertyGrid::GetPropertyClassName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxChar* wxPropertyContainerMethods::GetPropertyClassName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Gets name of property's constructor function. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea69" doxytag="wxPropertyGrid::GetPropertyClientData" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void* wxPropertyContainerMethods::GetPropertyClientData </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns client data (void*) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida86" doxytag="wxPropertyGrid::GetPropertyColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetPropertyColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns cell background colour of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea70" doxytag="wxPropertyGrid::GetPropertyEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPropertyContainerMethods::GetPropertyEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's editor. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea71" doxytag="wxPropertyGrid::GetPropertyHelpString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPropertyContainerMethods::GetPropertyHelpString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns help string associated with a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea72" doxytag="wxPropertyGrid::GetPropertyImage" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxBitmap* wxPropertyContainerMethods::GetPropertyImage </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's custom value image (NULL of none). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea73" doxytag="wxPropertyGrid::GetPropertyIndex" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> unsigned int wxPropertyContainerMethods::GetPropertyIndex </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns property's position under its parent. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea74" doxytag="wxPropertyGrid::GetPropertyLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPropertyContainerMethods::GetPropertyLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns label of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea75" doxytag="wxPropertyGrid::GetPropertyName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> const wxString&amp; wxPropertyContainerMethods::GetPropertyName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns name of a property. 
<p>
Note that obviously there is no name-version of this member function.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea76" doxytag="wxPropertyGrid::GetPropertyParent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyContainerMethods::GetPropertyParent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns parent item of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea77" doxytag="wxPropertyGrid::GetPropertyPtr" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::GetPropertyPtr </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns pointer to a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_11" doxytag="wxPropertyGrid::GetPropertyRect" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxRect wxPropertyGrid::GetPropertyRect </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>p1</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>p2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns rectangle that fully contains properties between and including p1 and p2. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea78" doxytag="wxPropertyGrid::GetPropertyShortClassName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxString wxPropertyContainerMethods::GetPropertyShortClassName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns short name for property's class. 
<p>
For example, "wxPropertyCategory" translates to "Category" and "wxIntProperty" to "Int".     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida96" doxytag="wxPropertyGrid::GetPropertyTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetPropertyTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns cell background colour of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea79" doxytag="wxPropertyGrid::GetPropertyValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxValidator* wxPropertyContainerMethods::GetPropertyValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns validator of a property as a reference, which you can pass to any number of SetPropertyValidator. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea80" doxytag="wxPropertyGrid::GetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPropertyContainerMethods::GetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns value as wxVariant. 
<p>
To get wxObject pointer from it, you will have to use WX_PG_VARIANT_TO_WXOBJECT(VARIANT,CLASSNAME) macro.<p>
If property value is unspecified, Null variant is returned.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea96" doxytag="wxPropertyGrid::GetPropertyValues" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxVariant wxPropertyContainerMethods::GetPropertyValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>listname</em> = wxEmptyString, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>baseparent</em> = ( (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a>*)NULL ), </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns a wxVariant list containing wxVariant versions of all property values. 
<p>
Order is not guaranteed. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td>Use wxPG_KEEP_STRUCTURE to retain category structure; each sub category will be its own wxList of wxVariant. Use wxPG_INC_ATTRIBUTES to include property attributes as well. Each attribute will be stored as list variant named &lt;propname&gt;. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd></dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida116" doxytag="wxPropertyGrid::GetRoot" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGPropertyWithChildren.htm">wxPGPropertyWithChildren</a>* wxPropertyGrid::GetRoot </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns "root property". 
<p>
It does not have name, etc. and it is not visible. It is only useful for accessing its children.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida117" doxytag="wxPropertyGrid::GetRowHeight" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPropertyGrid::GetRowHeight </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns height of a single grid row (in pixels). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida119" doxytag="wxPropertyGrid::GetSelection" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyGrid::GetSelection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns currently selected property. 
<p>

<p>
Reimplemented from <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea100">wxPropertyContainerMethods</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida120" doxytag="wxPropertyGrid::GetSelectionBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetSelectionBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current selection background colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida121" doxytag="wxPropertyGrid::GetSelectionForegroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxColour wxPropertyGrid::GetSelectionForegroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current selection text colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida123" doxytag="wxPropertyGrid::GetSplitterPosition" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPropertyGrid::GetSplitterPosition </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current splitter x position. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida125" doxytag="wxPropertyGrid::GetUnspecifiedCommonValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPropertyGrid::GetUnspecifiedCommonValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns index of common value that will truly change value to unspecified. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida126" doxytag="wxPropertyGrid::GetVerticalSpacing" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int wxPropertyGrid::GetVerticalSpacing </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns current vertical spacing. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea105" doxytag="wxPropertyGrid::GetVIterator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual <a class="el" href="classwxPGVIterator.htm">wxPGVIterator</a> wxPropertyContainerMethods::GetVIterator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>flags</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Similar to GetIterator, but instead returns <a class="el" href="classwxPGVIterator.htm">wxPGVIterator</a> instance, which can be useful for forward-iterating through arbitrary property containers. 
<p>

<p>
Reimplemented in <a class="el" href="classwxPropertyGridManager.htm#wxPropertyGridManagera95">wxPropertyGridManager</a>.    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida128" doxytag="wxPropertyGrid::HasSelection" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::HasSelection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if a property is selected. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea107" doxytag="wxPropertyGrid::HideProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::HideProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>hide</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Hides or reveals a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>hide</em>&nbsp;</td><td>If true, hides property, otherwise reveals it. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida131" doxytag="wxPropertyGrid::HitTest" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="structwxPropertyGridHitTestResult.htm">wxPropertyGridHitTestResult</a> wxPropertyGrid::HitTest </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxPoint &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>pt</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const</td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns information about arbitrary position in the grid. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagee4" doxytag="wxPropertyGrid::InitAllTypeHandlers" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::InitAllTypeHandlers </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [static, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initializes *all* property types. 
<p>
Causes references to most object files in the library, so calling this may cause significant increase in executable size when linking with static library.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea111" doxytag="wxPropertyGrid::Insert" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::Insert </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>parent</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>newproperty</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea112">Insert </a> 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea112" doxytag="wxPropertyGrid::Insert" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPropertyContainerMethods::Insert </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>priorThis</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>newproperty</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Inserts property to the property container. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>priorthis</em>&nbsp;</td><td>New property is inserted just prior to this. Available only in the first variant. There are two versions of this function to allow this parameter to be either an id or name to a property.</td></tr>
    <tr><td valign=top><em>parent</em>&nbsp;</td><td>New property is inserted under this category. Available only in the second variant. There are two versions of this function to allow this parameter to be either an id or name to a property.</td></tr>
    <tr><td valign=top><em>index</em>&nbsp;</td><td>Index under category. Available only in the second variant. If index is &lt; 0, property is appended in category.</td></tr>
    <tr><td valign=top><em>newproperty</em>&nbsp;</td><td>Pointer to the inserted property. <a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> will take ownership of this object.</td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>Returns id for the property,</dd></dl>
<dl compact><dt><b>Remarks:</b></dt><dd></dd></dl>
<ul>
<li><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> takes the ownership of the property pointer.</li></ul>
<p>
While Append may be faster way to add items, make note that when both data storages (categoric and non-categoric) are active, Insert becomes even more slow. This is especially true if current mode is non-categoric.<p>
Example of use:<p>
<pre class="fragment"><div>            <span class="comment">// append category</span>
            <a class="code" href="classwxPGProperty.htm">wxPGId</a> my_cat_id = propertygrid-&gt;Append( <span class="keyword">new</span> <a class="code" href="classwxPropertyCategory.htm">wxPropertyCategory</a> (wxT(<span class="stringliteral">"My Category"</span>)) );

            ...

            <span class="comment">// insert into category - using second variant</span>
            <a class="code" href="classwxPGProperty.htm">wxPGId</a> my_item_id_1 = propertygrid-&gt;Insert( my_cat_id, 0, <span class="keyword">new</span> wxStringProperty(wxT(<span class="stringliteral">"My String 1"</span>)) );

            <span class="comment">// insert before to first item - using first variant</span>
            <a class="code" href="classwxPGProperty.htm">wxPGId</a> my_item_id_2 = propertygrid-&gt;Insert( my_item_id, <span class="keyword">new</span> wxStringProperty(wxT(<span class="stringliteral">"My String 2"</span>)) );
</div></pre>    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea114" doxytag="wxPropertyGrid::InsertPropertyChoice" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::InsertPropertyChoice </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em> = INT_MAX</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Inserts choice to a property that can accept one. 
<p>
See AddPropertyChoice for more details.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida137" doxytag="wxPropertyGrid::IsAnyModified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::IsAnyModified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if any property has been modified by the user. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_14" doxytag="wxPropertyGrid::IsEditorsValueModified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::IsEditorsValueModified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if editor's value was marked modified. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida138" doxytag="wxPropertyGrid::IsFrozen" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::IsFrozen </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if updating is frozen (ie. 
<p>
Freeze() called but not yet Thaw() ).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida139" doxytag="wxPropertyGrid::IsMainButtonEvent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::IsMainButtonEvent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxEvent &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>event</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if given event is from first of an array of buttons (as can be in case when <a class="el" href="classwxPGMultiButton.htm">wxPGMultiButton</a> is used). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea118" doxytag="wxPropertyGrid::IsPropertyCategory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::IsPropertyCategory </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property is a category. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea119" doxytag="wxPropertyGrid::IsPropertyEnabled" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::IsPropertyEnabled </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property is enabled. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea120" doxytag="wxPropertyGrid::IsPropertyExpanded" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::IsPropertyExpanded </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if given property is expanded. 
<p>
Naturally, always returns false for properties that cannot be expanded.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea121" doxytag="wxPropertyGrid::IsPropertyKindOf" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::IsPropertyKindOf </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxClassInfo *&nbsp;</td>
          <td class="mdname" nowrap> <em>info</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property is of certain type. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>info</em>&nbsp;</td><td>Preferably use <a class="el" href="group__miscellaneous.htm#ga10">WX_PG_CLASSINFO(PROPERTYNAME)</a>. Alternative is PROPERTYNAMEClassInfo. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea122" doxytag="wxPropertyGrid::IsPropertyModified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::IsPropertyModified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property has been modified after value set or modify flag clear by software. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea123" doxytag="wxPropertyGrid::IsPropertyShown" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::IsPropertyShown </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property is shown (ie. 
<p>
hideproperty with true not called for it).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea124" doxytag="wxPropertyGrid::IsPropertyUnspecified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::IsPropertyUnspecified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap> const<code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property value is set to unspecified. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea125" doxytag="wxPropertyGrid::LimitPropertyEditing" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::LimitPropertyEditing </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>limit</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Disables (limit = true) or enables (limit = false) wxTextCtrl editor of a property, if it is not the sole mean to edit the value. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea126" doxytag="wxPropertyGrid::NamesToProperties" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::NamesToProperties </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxArrayPGProperty *&nbsp;</td>
          <td class="mdname" nowrap> <em>properties</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>names</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts array of names to array of property pointers. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridz0_16" doxytag="wxPropertyGrid::OnCustomEditorEvent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::OnCustomEditorEvent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxCommandEvent &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>event</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Pass this function to Connect calls in propertyclass::CreateEditor. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea129" doxytag="wxPropertyGrid::PropertiesToNames" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::PropertiesToNames </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxArrayString *&nbsp;</td>
          <td class="mdname" nowrap> <em>names</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayPGProperty &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>properties</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"> const<code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Converts array of properties to array of names. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea130" doxytag="wxPropertyGrid::RefreshGrid" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPropertyContainerMethods::RefreshGrid </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>state</em> = NULL          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If state is shown in it's grid, refresh it now. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagee5" doxytag="wxPropertyGrid::RegisterAdditionalEditors" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::RegisterAdditionalEditors </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [static, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Initializes additional property editors (SpinCtrl etc.). 
<p>
Causes references to most object files in the library, so calling this may cause significant increase in executable size when linking with static library.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGride7" doxytag="wxPropertyGrid::RegisterEditorClass" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPropertyGrid::RegisterEditorClass </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>editor</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>noDefCheck</em> = false</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Registers a new editor class. 
<p>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>Pointer</em>&nbsp;</td><td>to the editor class instance that should be used. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea131" doxytag="wxPropertyGrid::ReplaceProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPropertyContainerMethods::ReplaceProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>property</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Replaces property with id with newly created property. 
<p>
For example, this code replaces existing property named "Flags" with one that will have different set of items: <pre class="fragment"><div>            pg-&gt;<a class="code" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea131">ReplaceProperty</a>(wxT(<span class="stringliteral">"Flags"</span>),
                wxFlagsProperty(wxT(<span class="stringliteral">"Flags"</span>),wxPG_LABEL,newItems))
</div></pre>For more info, see <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea112">wxPropertyGrid::Insert</a>.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida153" doxytag="wxPropertyGrid::ResetColours" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::ResetColours </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Resets all colours to the original system values. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida154" doxytag="wxPropertyGrid::SelectProperty" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyGrid::SelectProperty </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>focus</em> = false</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Selects a property. 
<p>
Editor widget is automatically created, but not focused unless focus is true. This will generate wxEVT_PG_SELECT event. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Id to property to select. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>True</em>&nbsp;</td><td>if selection finished succesfully. Usually only fails if current value in editor is not valid. </td></tr>
  </table>
</dl>
<dl compact><dt><b>See also:</b></dt><dd>wxPropertyGrid::Unselect </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagee6" doxytag="wxPropertyGrid::SetBoolChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetBoolChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>true_choice</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>false_choice</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [static, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Lets user to set the strings listed in the choice dropdown of a wxBoolProperty. 
<p>
Defaults are "True" and "False", so changing them to, say, "Yes" and "No" may be useful in some less technical applications.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida156" doxytag="wxPropertyGrid::SetButtonShortcut" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetButtonShortcut </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>keycode</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>ctrlDown</em> = false, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>altDown</em> = false</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes keyboard shortcut to push the editor button. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>You can set default with keycode 0. Good value for the platform is guessed, but don't expect it to be very accurate. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida157" doxytag="wxPropertyGrid::SetCaptionBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCaptionBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets category caption background colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida158" doxytag="wxPropertyGrid::SetCaptionForegroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCaptionForegroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets category caption text colour. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida159" doxytag="wxPropertyGrid::SetCaptionTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCaptionTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxColour &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>col</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets text colour of a category caption (but not it's children). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida160" doxytag="wxPropertyGrid::SetCellBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCellBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets default cell background colour - applies to property cells. 
<p>
Note that appearance of editor widgets may not be affected.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida161" doxytag="wxPropertyGrid::SetCellDisabledTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCellDisabledTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets cell text colour for disabled properties. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida162" doxytag="wxPropertyGrid::SetCellTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCellTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets default cell text colour - applies to property name and value text. 
<p>
Note that appearance of editor widgets may not be affected.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida163" doxytag="wxPropertyGrid::SetColumnCount" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetColumnCount </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>colCount</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set number of columns (2+). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida164" doxytag="wxPropertyGrid::SetCurrentCategory" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetCurrentCategory </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the current category - Append will add non-categories under this one. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea133" doxytag="wxPropertyGrid::SetExpandedProperties" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetExpandedProperties </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxArrayPGProperty &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>array</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>expand</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets all properties in given array as expanded. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>expand</em>&nbsp;</td><td>False if you want to collapse properties instead. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida167" doxytag="wxPropertyGrid::SetLineColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetLineColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets colour of lines between cells. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida168" doxytag="wxPropertyGrid::SetMarginColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetMarginColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets background colour of margin. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea134" doxytag="wxPropertyGrid::SetPropertiesFlag" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertiesFlag </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxArrayPGProperty &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>srcArr</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxPGProperty::FlagType&nbsp;</td>
          <td class="mdname" nowrap> <em>flags</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>inverse</em> = false</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets or clears flag(s) of all properties in given array. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>flags</em>&nbsp;</td><td>Property flags to set or clear. </td></tr>
    <tr><td valign=top><em>inverse</em>&nbsp;</td><td>Set to true if you want to clear flag instead of setting them. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>If wxPG_USE_STL is 1, then wxArrayPGProperty is typedef of std::vector&lt;wxPGProperty*&gt;. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea135" doxytag="wxPropertyGrid::SetPropertyAttribute" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyAttribute </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>attrName</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>argFlags</em> = 0</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets an attribute of a property. 
<p>
Ids and relevants values are totally specific to property classes and may affect either the given instance or all instances of that class. See <a class="el" href="group__attrids.htm">wxPropertyGrid Property Attribute Identifiers</a> for list of built-in attributes. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>argFlags</em>&nbsp;</td><td>Optional. Use wxPG_RECURSE to set the attribute to child properties as well. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>wxVariant doesn't have int constructor (as of 2.5.4), so <b>you will need to cast int values (including most numeral constants) to long</b>. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida171" doxytag="wxPropertyGrid::SetPropertyAttributeAll" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyAttributeAll </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>attrName</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets property attribute for all applicapple properties. 
<p>
Be sure to use this method after all properties have been added to the grid.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea136" doxytag="wxPropertyGrid::SetPropertyAttributes" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyAttributes </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>attributes</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets attributes from a <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a>. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida173" doxytag="wxPropertyGrid::SetPropertyBackgroundColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyBackgroundColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxColour &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>col</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets background colour of property and all its children. 
<p>
Colours of captions are not affected. Background brush cache is optimized for often set colours to be set last.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea137" doxytag="wxPropertyGrid::SetPropertyCell" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyCell </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>column</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>text</em> = wxEmptyString, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxBitmap &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>bitmap</em> = wxNullBitmap, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxColour &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>fgCol</em> = wxNullColour, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxColour &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>bgCol</em> = wxNullColour</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets text, bitmap, and colours for given column's cell. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>You can set label cell by setting column to 0.</li><li>You can use wxPG_LABEL as text to use default text for column. </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea138" doxytag="wxPropertyGrid::SetPropertyChoices" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyChoices </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>choices</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set choices of a property to specified set of labels and values. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea139" doxytag="wxPropertyGrid::SetPropertyChoicesExclusive" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyChoicesExclusive </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
If property's set of choices is shared, then calling this method converts it to private. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea140" doxytag="wxPropertyGrid::SetPropertyClientData" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyClientData </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>void *&nbsp;</td>
          <td class="mdname" nowrap> <em>clientData</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets client data (void*) of a property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>This untyped client data has to be deleted manually. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida178" doxytag="wxPropertyGrid::SetPropertyColourToDefault" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyColourToDefault </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets background and text colour of property and all its children to the default. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea141" doxytag="wxPropertyGrid::SetPropertyEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>editorName</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets editor control of a property. 
<p>
As editor argument, use editor name string, such as wxT("TextCtrl") or wxT("Choice").     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea142" doxytag="wxPropertyGrid::SetPropertyEditor" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyEditor </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="mdname" nowrap> <em>editor</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets editor control of a property. 
<p>
As editor argument, use wxPG_EDITOR(EditorName), where basic built-in editor names are TextCtrl, Choice, ComboBox, CheckBox, TextCtrlAndButton, and ChoiceAndButton. Additional editors include SpinCtrl and DatePickerCtrl, which also require <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagee5">wxPropertyGrid::RegisterAdditionalEditors()</a> call prior using.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea143" doxytag="wxPropertyGrid::SetPropertyHelpString" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyHelpString </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>helpString</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Associates the help string with property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>By default, text is shown either in the manager's "description" text box or in the status bar. If extra window style wxPG_EX_HELP_AS_TOOLTIPS is used, then the text will appear as a tooltip. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea144" doxytag="wxPropertyGrid::SetPropertyImage" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyImage </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxBitmap &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>bmp</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set wxBitmap in front of the value. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Bitmap will be scaled to a size returned by <a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida52">wxPropertyGrid::GetImageSize()</a>; </li></ul>
</dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea145" doxytag="wxPropertyGrid::SetPropertyLabel" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyLabel </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>newproplabel</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets label of a property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>This is the only way to set property's name. There is not wxPGProperty::SetLabel() method. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea146" doxytag="wxPropertyGrid::SetPropertyMaxLength" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> bool wxPropertyContainerMethods::SetPropertyMaxLength </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>maxLen</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets max length of property's text. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida185" doxytag="wxPropertyGrid::SetPropertyName" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyName </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>newname</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets name of a property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>id</em>&nbsp;</td><td>Id of a property. </td></tr>
    <tr><td valign=top><em>newname</em>&nbsp;</td><td>New name. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Remarks:</b></dt><dd>This is the only way to set property's name. There is not wxPGProperty::SetName() method. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea147" doxytag="wxPropertyGrid::SetPropertyReadOnly" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyReadOnly </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>set</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets property to have read-only value. 
<p>
In other words, user cannot change the value in the editor, but they can still copy it. <dl compact><dt><b>Remarks:</b></dt><dd>This is mainly for use with textctrl editor. Not all other editors fully support it. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida187" doxytag="wxPropertyGrid::SetPropertyTextColour" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetPropertyTextColour </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxColour &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>col</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets text colour of property and all its children. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea148" doxytag="wxPropertyGrid::SetPropertyUnspecified" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyUnspecified </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets property's value to unspecified. 
<p>
If it has children (it may be category), then the same thing is done to them.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea149" doxytag="wxPropertyGrid::SetPropertyValidator" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValidator </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxValidator &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>validator</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets validator of a property. 
<p>
For example <pre class="fragment"><div>          <span class="comment">// Allow property's value range from -100 to 100</span>
          wxIntPropertyValidator validator(-100,100);
          <a class="code" href="classwxPGProperty.htm">wxPGId</a> <span class="keywordtype">id</span> = pg-&gt;<a class="code" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea1">Append</a>( wxIntProperty(wxT(<span class="stringliteral">"Value 1"</span>,wxPG_LABEL,0)) );
          pg-&gt;<a class="code" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea149">SetPropertyValidator</a>( <span class="keywordtype">id</span>, validator );
</div></pre>    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea150" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayInt &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxArrayInt&amp;) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea151" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxULongLong_t&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxULongLong&amp;) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea152" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxLongLong_t&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxLongLong&amp;) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea153" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxSize &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxSize&amp;) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea154" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxPoint &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxPoint&amp;) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea155" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxVariant&amp;) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea157" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>void *&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (void*) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea158" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxObject *&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxObject*) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea159" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxString) of a property. 
<p>
<dl compact><dt><b>Remarks:</b></dt><dd>This method uses <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya131">wxPGProperty::SetValueFromString</a>, which all properties should implement. This means that there should not be a type error, and instead the string is converted to property's actual value type. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea161" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxArrayString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxArrayString) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea163" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (bool) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea164" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (floating point) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea165" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>int&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (integer) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea166" doxytag="wxPropertyGrid::SetPropertyValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>long&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (long integer) of a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea168" doxytag="wxPropertyGrid::SetPropertyValues" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropertyValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxList &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>list</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>defaultCategory</em> = ((<a class="el" href="classwxPGProperty.htm">wxPGProperty</a>*)NULL)</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets various property values from a list of wxVariants. 
<p>
If property with name is missing from the grid, new property is created under given default category (or root if omitted).     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea169" doxytag="wxPropertyGrid::SetPropVal" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyContainerMethods::SetPropVal </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>wxVariant &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>value</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets value (wxVariant&amp;) of a property. 
<p>
Same as SetPropertyValue, but accepts reference.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida210" doxytag="wxPropertyGrid::SetSelectionBackground" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetSelectionBackground </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets selection background colour - applies to selected property name background. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida211" doxytag="wxPropertyGrid::SetSelectionForeground" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetSelectionForeground </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">const wxColour &amp;&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>col</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets selection foreground colour - applies to selected property name text. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida212" doxytag="wxPropertyGrid::SetSplitterLeft" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetSplitterLeft </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>subProps</em> = false          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Moves splitter as left as possible, while still allowing all labels to be shown in full. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>subProps</em>&nbsp;</td><td>If false, will still allow sub-properties (ie. properties which parent is not root or category) to be cropped. </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida213" doxytag="wxPropertyGrid::SetSplitterPosition" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetSplitterPosition </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>newxpos</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>bool&nbsp;</td>
          <td class="mdname" nowrap> <em>refresh</em> = true</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets x coordinate of the splitter. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida214" doxytag="wxPropertyGrid::SetUnspecifiedCommonValue" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetUnspecifiedCommonValue </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>index</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set index of common value that will truly change value to unspecified. 
<p>
Using -1 will set none to have such effect. Default is 0.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida215" doxytag="wxPropertyGrid::SetVerticalSpacing" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetVerticalSpacing </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>vspacing</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets vertical spacing. 
<p>
Can be 1, 2, or 3 - a value relative to font height. Value of 2 should be default on most platforms. <dl compact><dt><b>Remarks:</b></dt><dd>On wxMSW, wxComboBox, when used as property editor widget, will spill out with anything less than 3. </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida216" doxytag="wxPropertyGrid::SetVirtualWidth" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SetVirtualWidth </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>width</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set virtual width for this particular page. 
<p>
Width -1 indicates that the virtual width should be disabled.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida217" doxytag="wxPropertyGrid::SetWindowStyleFlag" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> virtual void wxPropertyGrid::SetWindowStyleFlag </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">long&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>style</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Overridden function. 
<p>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="group__wndflags.htm">Additional Window Styles</a> </dd></dl>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida218" doxytag="wxPropertyGrid::ShowPropertyError" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::ShowPropertyError </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>id</em>, </td>
        </tr>
        <tr>
          <td class="md" nowrap align="right"></td>
          <td></td>
          <td class="md" nowrap>const wxString &amp;&nbsp;</td>
          <td class="mdname" nowrap> <em>msg</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Shows an brief error message that is related to a property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida219" doxytag="wxPropertyGrid::Sort" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::Sort </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>id</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sorts children of a category. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida220" doxytag="wxPropertyGrid::Sort" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::Sort </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sorts all items at all levels (except sub-properties). 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida221" doxytag="wxPropertyGrid::SwitchState" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::SwitchState </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>pNewState</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Mostly useful for page switching. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida222" doxytag="wxPropertyGrid::ValueChangeInEvent" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void wxPropertyGrid::ValueChangeInEvent </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">wxVariant&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>variant</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Call this from <a class="el" href="classwxPGProperty.htm#wxPropertyCategorya100">wxPGProperty::OnEvent()</a> to cause property value to be changed after the function returns (with true as return value). 
<p>
<a class="el" href="classwxPropertyGrid.htm#wxPropertyGrida222">ValueChangeInEvent()</a> must be used if you wish the application to be able to use wxEVT_PG_CHANGING to potentially veto the given value.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea175" doxytag="wxPropertyGrid::wxDEPRECATED" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyContainerMethods::wxDEPRECATED </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool IsModified(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>const</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property has been modified after value set or modify flag clear by software. 
<p>
NOTE: This function is deprecated. Use IsPropertyModified instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea176" doxytag="wxPropertyGrid::wxDEPRECATED" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyContainerMethods::wxDEPRECATED </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool IsPropertyValueType(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id, const wxChar *typestr)&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>const</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if property's value type has name typestr. 
<p>
DEPRECATED: Use GetPropertyValueType() and wxString comparison instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea177" doxytag="wxPropertyGrid::wxDEPRECATED" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyContainerMethods::wxDEPRECATED </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool &nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>Disable</em>(wxPGPropArg id)          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Disables property. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGridPagea178" doxytag="wxPropertyGrid::wxDEPRECATED" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyContainerMethods::wxDEPRECATED </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void &nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>Delete</em>(wxPGPropArg id)          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline, inherited]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Deletes a property by id. 
<p>
If category is deleted, all children are automatically deleted as well. DEPRECATED: Use <a class="el" href="classwxPropertyContainerMethods.htm#wxPropertyGridPagea13">DeleteProperty()</a> instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida228" doxytag="wxPropertyGrid::wxDEPRECATED" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyGrid::wxDEPRECATED </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void &nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>SetPropertyColour</em>(wxPGPropArg id, const wxColour &amp;col)          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets background colour of property and all its children. 
<p>
Colours of captions are not affected. Background brush cache is optimized for often set colours to be set last.<p>
NOTE: This function is deprecated. Use SetPropertyBackgroundColour instead.     </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida229" doxytag="wxPropertyGrid::wxDEPRECATED" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyGrid::wxDEPRECATED </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">bool IsPropertySelected(<a class="el" href="classwxPGPropArgCls.htm">wxPGPropArg</a> id)&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>const</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns true if given property is selected. 
<p>
    </td>
  </tr>
</table>
<a class="anchor" name="wxPropertyGrida230" doxytag="wxPropertyGrid::wxDEPRECATED" ></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> wxPropertyGrid::wxDEPRECATED </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">void &nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>ClearTargetPage</em>()          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [inline]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Synonymous to Clear. 
<p>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li>propgrid.h</ul>
<hr size="1"><address style="align: right;"><small>Generated on Thu Oct 11 17:25:26 2007 for wxPropertyGrid by
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border=0 > 
</a>1.3.6 </small></address>
</body>
</html>
